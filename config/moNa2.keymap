#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <200>;
    tapping-term-ms = <400>;
    retro-tap;
};

&lt { tapping-term-ms = <400>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_ctrl_a {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp LC(A)>;
        };

        combo_ctrl_z {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp LC(Z)>;
        };

        combo_ctrl_x {
            timeout-ms = <50>;
            key-positions = <24 23>;
            bindings = <&kp LC(X)>;
        };

        combo_ctrl_c {
            timeout-ms = <50>;
            key-positions = <25 24>;
            bindings = <&kp LC(C)>;
        };

        combo_ctrl_v {
            timeout-ms = <50>;
            key-positions = <26 25>;
            bindings = <&kp LC(V)>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        mkp_exit_AML: mkp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl 4>;

            label = "MKP_EXIT_AML";
        };

        screen_shot_macro: screen_shot_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN &kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp S>;
        };

        bt0: bt1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &to 1>;
            label = "BT1";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&screen_shot_macro>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R      &kp T                                                &kp Y        &kp U    &kp I      &kp O       &kp P
&kp A             &kp S         &kp D         &kp F      &kp G        &trans            &kp MINUS             &kp H        &kp J    &kp K      &kp L       &kp SEMICOLON
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V      &kp B        &lt 5 ASTERISK    &kp LEFT_PARENTHESIS  &kp N        &lt 4 M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt 4 TAB  &lt 2 SPACE  &lt 3 DEL         &kp BACKSPACE         &lt 1 ENTER                                  &kp LC(SPACE)
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans    &trans    &kp PAGE_UP    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp HOME  &mkp MB1  &mkp MB2       &mkp MB3  &kp END
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans    &kp PAGE_DOWN  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                       &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_2 {
            bindings = <
&kp INT3        &kp AMPERSAND    &kp QUESTION  &kp INT3   &trans                              &trans  &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp EQUAL      &kp LS(INT_YEN)
&kp LEFT_BRACE  &kp DOLLAR       &kp PERCENT   &kp CARET  &kp LEFT_BRACKET  &trans    &trans  &trans  &kp RIGHT_BRACKET  &kp BACKSLASH         &kp LESS_THAN  &kp GREATER_THAN
&trans          &kp EXCLAMATION  &kp AT_SIGN   &kp HASH   &trans            &trans    &trans  &trans  &kp RIGHT_BRACE    &kp PIPE              &kp PLUS       &kp LS(INT1)
&trans          &trans           &trans        &trans     &trans            &trans    &trans  &trans                                                          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        layer_3 {
            bindings = <
&kp DOUBLE_QUOTES  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp LS(SEMICOLON)                                &trans      &kp F7  &kp F8  &kp F9  &kp F10
&kp SLASH          &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS          &trans                &trans  &trans      &kp F4  &kp F5  &kp F6  &kp F11
&kp KP_NUMBER_0    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp UNDERSCORE     &screen_shot_macro    &trans  &kp ESCAPE  &kp F1  &kp F2  &kp F3  &kp F12
&trans             &trans           &trans           &trans           &trans             &trans                &trans  &trans                              &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_4 {
            bindings = <
&kp ESCAPE      &kp LC(TAB)         &kp UP_ARROW    &kp LC(TAB)          &trans                     &trans    &kp C_BRIGHTNESS_DEC    &kp LS(LC(UP_ARROW))    &kp C_BRIGHTNESS_INC     &trans
&kp HOME        &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW      &kp END  &trans    &trans  &kp HOME  &kp LC(LS(LEFT_ARROW))  &kp LS(LC(DOWN_ARROW))  &kp LS(LC(RIGHT_ARROW))  &kp END
&kp LEFT_SHIFT  &kp LG(LEFT_ARROW)  &trans          &kp RG(RIGHT_ARROW)  &trans   &trans    &trans  &trans    &kp K_MUTE              &kp C_VOLUME_DOWN       &kp C_VOLUME_UP          &trans
&trans          &trans              &trans          &trans               &trans   &trans    &trans  &trans                                                                             &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans        &trans        &trans        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans  &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans                                            &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
